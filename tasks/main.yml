---
- name: Check if restic binary exists
  stat:
    path: /usr/local/bin/restic
  register: restic_binary
- name: Install Restic from github
  block:
    - name: Restic RPM package is absent
      package: name="restic" state="absent"
    - name: Get latest release info from GitHub API
      uri:
        url: "https://api.github.com/repos/restic/restic/releases/latest"
        method: GET
        return_content: yes
      register: release_info

    - name: Find Linux amd64 download URL
      set_fact:
        download_url: "{{ item.browser_download_url }}"
        filename: "{{ item.name }}"
      loop: "{{ release_info.json.assets }}"
      when:
        - "'linux' in item.name | lower"
        - "'amd64' in item.name | lower"
        - "item.name.endswith('.bz2')"

    - name: Download restic binary
      get_url:
        url: "{{ download_url }}"
        dest: "/usr/local/bin/{{ filename }}"
        mode: "0644"
      when: download_url is defined

    - name: Extract and install restic binary
      shell: "bunzip2 -c /usr/local/bin/{{ filename }} > /usr/local/bin/restic"
      args:
        creates: "/usr/local/bin/restic"

    - name: Restic binary is executable
      ansible.builtin.file:
        path: "/usr/local/bin/restic"
        state: file
        mode: "0755"
  tags:
    - install
  when: not restic_binary.stat.exists

- name: Copy backup script
  copy:
    src: restic.sh
    dest: /usr/local/bin
    mode: "u=rx,g=rx,o=rx"

- name: Copy config file
  template:
    src: restic.sh.conf.j2
    dest: /etc/restic.sh.conf
    mode: "u=rw,g=,o="

- name: Copy systemd service
  copy:
    src: restic.sh.service
    dest: /etc/systemd/system
  register: systemd_unit

- name: Copy systemd timer
  template:
    src: restic.sh.timer.j2
    dest: /etc/systemd/system/restic.sh.timer
  register: systemd_timer

- name: Reconfigure systemd
  systemd:
    daemon_reload: yes
    name: restic.sh.timer
    enabled: yes
    state: started
